---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/users/{user_id}/exchange":
    post:
      summary: Creates an exchange transaction
      tags:
      - Exchanges
      parameters:
      - name: user_id
        in: path
        description: ID del usuario
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Exchange transaction created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  exchange_type:
                    type: string
                  status:
                    type: string
                required:
                - id
                - exchange_type
                - status
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                required:
                - error
                - code
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                required:
                - error
                - code
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 1000
                sending_currency:
                  type: string
                  example: usd
                receiving_currency:
                  type: string
                  example: bitcoin
              required:
              - amount
              - sending_currency
              - receiving_currency
  "/users/{user_id}/exchanges/":
    get:
      summary: Retrieves a specific exchange
      tags:
      - Exchanges
      parameters:
      - name: user_id
        in: path
        description: User ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Exchange found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  exchange_type:
                    type: string
                  status:
                    type: string
                required:
                - id
                - exchange_type
                - status
        '404':
          description: Exchange not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/users/{user_id}/exchanges/{id}":
    get:
      summary: Lists all exchanges for a user
      tags:
      - Exchanges
      parameters:
      - name: user_id
        in: path
        description: User ID
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Exchange ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Exchanges retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    exchange_type:
                      type: string
                    status:
                      type: string
                  required:
                  - id
                  - exchange_type
                  - status
  "/prices":
    get:
      summary: Get crypto prices (only BTC for the moment)
      tags:
      - Prices
      security: []
      responses:
        '200':
          description: Prices returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  bitcoin:
                    type: object
                    properties:
                      usd:
                        type: number
                required:
                - bitcoin
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                required:
                - error
                - code
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                required:
                - error
                - code
  "/signup":
    post:
      summary: Register a new user
      tags:
      - Authentication
      security: []
      parameters: []
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  first_name:
                    type: string
                    example: John
                  last_name:
                    type: string
                    example: Doe
                  email:
                    type: string
                    format: email
                    example: john.doe@example.com
                  auth_token:
                    type: object
                    properties:
                      token:
                        type: string
                        example: abcdef123456
                      refresh_token:
                        type: string
                        example: ghijkl789012
                      expires_at:
                        type: string
                        format: date-time
                        example: '2025-02-18T00:01:42.969Z'
                      refresh_token_expires_at:
                        type: string
                        format: date-time
                        example: '2025-02-25T00:01:42.969Z'
                    required:
                    - token
                    - refresh_token
                    - expires_at
                    - refresh_token_expires_at
                required:
                - first_name
                - last_name
                - email
                - auth_token
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              examples:
                example_0:
                  value:
                    blank:
                      summary: Blank fields error
                      value:
                        errors:
                        - Email can't be blank
                    taken:
                      summary: Email already taken error
                      value:
                        errors:
                        - Email has already been taken
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: John
                    last_name:
                      type: string
                      example: Doe
                    email:
                      type: string
                      format: email
                      example: john.doe@example.com
                    password:
                      type: string
                      example: password
                    password_confirmation:
                      type: string
                      example: password
                  required:
                  - first_name
                  - last_name
                  - email
                  - password
                  - password_confirmation
              required:
              - user
  "/login":
    post:
      summary: Create a session
      tags:
      - Sessions
      security: []
      parameters: []
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  first_name:
                    type: string
                  last_name:
                    type: string
                  email:
                    type: string
                  auth_token:
                    type: object
                    properties:
                      token:
                        type: string
                      refresh_token:
                        type: string
                      expires_at:
                        type: string
                        format: date-time
                      refresh_token_expires_at:
                        type: string
                        format: date-time
                required:
                - first_name
                - last_name
                - email
                - auth_token
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/users/{user_id}/wallets":
    get:
      summary: Get user wallets
      tags:
      - Wallets
      security:
      - bearer_auth: []
      parameters:
      - name: user_id
        in: path
        description: User id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Found wallets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    currency:
                      type: string
                    balance:
                      type: number
                  required:
                  - id
                  - currency
                  - balance
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
components:
  securitySchemes:
    bearer_auth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Enter token: Bearer <token>'
security:
- bearer_auth: []
servers:
- url: http://localhost:3000
- url: https://mr-peanutbutter-app-35d05975bacd.herokuapp.com/
